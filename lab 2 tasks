{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyNH6QBwo55qspKmFuSEGLoP",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Chanas1512/INRTO-TO-AI/blob/main/lab%202%20tasks\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "NAME: MUHAMMAD ANAS ARIF\n",
        "REG NO# SP22-BAI-026\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "uF6FEwkqttis"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "N0OqFoa_nQR-",
        "outputId": "38da51b0-aca7-48c0-d60e-930e861e598e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Enter elements of first array\n",
            "Enter elements of array5\n",
            "Enter elements of array3\n",
            "Enter elements of array4\n",
            "Enter elements of array2\n",
            "Enter elements of array7\n",
            "Enter elements of first array\n",
            "Enter elements of array1\n",
            "Enter elements of array2\n",
            "Enter elements of array4\n",
            "Enter elements of array4\n",
            "Enter elements of array5\n",
            "[5, 3, 4, 2, 7, 1, 2, 4, 4, 5]\n"
          ]
        }
      ],
      "source": [
        "myList=[]\n",
        "print(\"Enter elements of first array\")\n",
        "for i in range (5):\n",
        "    val=int(input(\"Enter elements of array\"))\n",
        "    myList.append(val)\n",
        "myList2=[]\n",
        "print(\"Enter elements of first array\")\n",
        "for i in range (5):\n",
        "    val2=int(input(\"Enter elements of array\"))\n",
        "    myList2.append(val2)\n",
        "myList3=myList+myList2\n",
        "print(myList3)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def isPlaindrome(word):\n",
        "    temp=word[::-1]\n",
        "    if temp.capitalize()==word.capitalize():\n",
        "        return True\n",
        "    else:\n",
        "        return False\n",
        "print(isPlaindrome(\"deed\"))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HGtcEhhuniq_",
        "outputId": "9197b705-40f2-4733-9ece-ce9fd996817e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "True\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "A = [[12,7,3],\n",
        "    [4 ,5,6],\n",
        "    [7 ,8,9]]\n",
        "B = [[5,8,1],\n",
        "    [6,7,3],\n",
        "    [4,5,9]]\n",
        "C= [[0,0,0],\n",
        "    [0,0,0],\n",
        "    [0,0,0]]\n",
        "\n",
        "for i in range(3):\n",
        "   for j in range(3):\n",
        "        for k in range(3):\n",
        "           C[i][j] += A[i][k] * B[k][j]\n",
        "\n",
        "for r in C:\n",
        "   print(r)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "g19Bqpj1nrEP",
        "outputId": "7750632c-b931-4c23-ecaf-7b483ef69569"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[114, 160, 60]\n",
            "[74, 97, 73]\n",
            "[119, 157, 112]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def perimeter (listing):\n",
        "    leng=len(listing)\n",
        "    perimeter=0\n",
        "    for i in range(0,leng-1):\n",
        "        dis=(((listing[i][0]-listing[i+1][0])**2)+((listing[i][1]-listing[i+1][1])**2)**0.5)\n",
        "        perimeter+=dis\n",
        "        perimeter+=(((listing[0][0]-listing[leng-1][0])**2)+((listing[0][1]-listing[leng-1][1])**2)**0.5)\n",
        "        return perimeter\n",
        "l=[(1,3),(2,7),(3,9),(-1,8)]\n",
        "print(perimeter(l))\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mLesPVYBn42V",
        "outputId": "bb31d51e-4aa4-4d6d-d937-a6c17247eb38"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "14.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def symmetric(a,b):\n",
        "    e=set()\n",
        "    for i in a:\n",
        "        if i not in b:\n",
        "            e.add(i)\n",
        "    for i in b:\n",
        "        if i not in a:\n",
        "            e.add(i)\n",
        "    return e\n",
        "set1={0,1,2,3,4,5}\n",
        "set2={6,7,8,9,0,1}\n",
        "print (symmetric(set1,set2))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KcATZcTTn-cg",
        "outputId": "24f1f2aa-9f62-4c83-ca4d-1dc1d296979a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{2, 3, 4, 5, 6, 7, 8, 9}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "firstName=(\"anas\",\"zainab\",\"hadiya\")\n",
        "lastName=(\"arif\",\"noor\",\"mazhar\")\n",
        "sample={(\"anas\",\"arif\"):\"03490590059\",(\"zainab\",\"noor\"):\"03191512158\",(\"hadiya\",\"noor\"):\"03261512158\"}\n",
        "searchtuple=(\"anas\",\"arif\")\n",
        "if searchtuple in sample:\n",
        "    print(sample[searchtuple])\n",
        "else:\n",
        "    print(\"NOT FOUND\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IECl1KcToGv0",
        "outputId": "f36df86e-4f55-42d4-b2bf-f58b191bf37c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "03490590059\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "myList=[]\n",
        "print(\"Enter elements of first array\")\n",
        "for i in range (5):\n",
        "    val=int(input(\"Enter elements of array\"))\n",
        "    myList.append(val)\n",
        "myList2=[]\n",
        "print(\"Enter elements of first array\")\n",
        "for i in range (5):\n",
        "    val2=int(input(\"Enter elements of array\"))\n",
        "    myList2.append(val2)\n",
        "myList3=myList+myList2\n",
        "myList3.sort()\n",
        "print(myList3)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tIjnWTCcsQBn",
        "outputId": "45ed0026-5b6d-4978-d88c-cf99e5328ea2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Enter elements of first array\n",
            "Enter elements of array5\n",
            "Enter elements of array3\n",
            "Enter elements of array8\n",
            "Enter elements of array5\n",
            "Enter elements of array4\n",
            "Enter elements of first array\n",
            "Enter elements of array1\n",
            "Enter elements of array2\n",
            "Enter elements of array3\n",
            "Enter elements of array4\n",
            "Enter elements of array5\n",
            "[1, 2, 3, 3, 4, 4, 5, 5, 5, 8]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "myList=[]\n",
        "print(\"Enter elements of first array\")\n",
        "for i in range (5):\n",
        "    val=int(input(\"Enter elements of array\"))\n",
        "    myList.append(val)\n",
        "myList2=[]\n",
        "print(\"Enter elements of first array\")\n",
        "for i in range (5):\n",
        "    val2=int(input(\"Enter elements of array\"))\n",
        "    myList2.append(val2)\n",
        "myList3=myList+myList2\n",
        "maxi=myList3[0]\n",
        "for i in range (10):\n",
        "    for j in range (10):\n",
        "        if (myList3[j]>maxi):\n",
        "            maxi=myList3[j]\n",
        "print (maxi)\n",
        "mani=myList3[0]\n",
        "for i in range (10):\n",
        "    for j in range (10):\n",
        "        if (myList3[j]<mani):\n",
        "            mani=myList3[j]\n",
        "print (mani)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Z533hjRXsZNi",
        "outputId": "8dd10064-df6d-489d-ddc5-0b00e6a51edf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Enter elements of first array\n",
            "Enter elements of array4\n",
            "Enter elements of array2\n",
            "Enter elements of array4\n",
            "Enter elements of array5\n",
            "Enter elements of array6\n",
            "Enter elements of first array\n",
            "Enter elements of array9\n",
            "Enter elements of array3\n",
            "Enter elements of array7\n",
            "Enter elements of array4\n",
            "Enter elements of array3\n",
            "9\n",
            "2\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Dict={(\"anas\"):\"15-12-2003\",(\"gul rehman\"):\"3-02-2004\",(\"zainab\"):\"6-07-2002\"}\n",
        "print (\"Welome to the birthday dictionary\")\n",
        "print(\"we know the birthdays of\")\n",
        "print(\"anas\")\n",
        "print(\"gul rehman\")\n",
        "print(\"zainab\")\n",
        "print(\"Enter the name of the person whose birthday you want to know\")\n",
        "name=str(input())\n",
        "print(Dict[name])\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4uchAD5Ks9fM",
        "outputId": "7811fca4-5467-416b-aff1-1212e58e9e23"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Welome to the birthday dictionary\n",
            "we know the birthdays of\n",
            "anas\n",
            "gul rehman\n",
            "zainab\n",
            "Enter the name of the person whose birthday you want to know\n",
            "anas\n",
            "15-12-2003\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Dict={(\"name\"):\"kelly\",(\"age\"):\"25\",(\"salary\"):\"260000\",(\"city\"):\"new york\"}\n",
        "print(Dict['name'])\n",
        "print(Dict['salary'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "p5gFQD1XtY-J",
        "outputId": "6c1075b9-f0a0-4fe5-aba5-518e8335f738"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "kelly\n",
            "260000\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from math import *\n",
        "x=0.001\n",
        "for i in range(0,360,30):\n",
        "    print (\"The value of sin and cos at \",i)\n",
        "    a=((sin(i+x)-(sin(i)))/x)\n",
        "    print(\"value of sin \",a)\n",
        "    print(\"value of cos \",cos(i))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "q5oyi58StkGj",
        "outputId": "2148a79d-679d-4269-b55b-1457b4e30b5f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The value of sin and cos at  0\n",
            "value of sin  0.9999998333333416\n",
            "value of cos  1.0\n",
            "The value of sin and cos at  30\n",
            "value of sin  0.15474543995008805\n",
            "value of cos  0.15425144988758405\n",
            "The value of sin and cos at  60\n",
            "value of sin  -0.9522604163796355\n",
            "value of cos  -0.9524129804151563\n",
            "The value of sin and cos at  90\n",
            "value of sin  -0.4485205397468661\n",
            "value of cos  -0.4480736161291701\n",
            "The value of sin and cos at  120\n",
            "value of sin  0.8138905292657261\n",
            "value of cos  0.8141809705265618\n",
            "The value of sin and cos at  150\n",
            "value of sin  0.6996081281249733\n",
            "value of cos  0.6992508064783751\n",
            "The value of sin and cos at  180\n",
            "value of sin  -0.5980593930329237\n",
            "value of cos  -0.5984600690578581\n",
            "The value of sin and cos at  210\n",
            "value of sin  -0.8841111851133898\n",
            "value of cos  -0.8838774731823718\n",
            "The value of sin and cos at  240\n",
            "value of sin  0.32530852870171767\n",
            "value of cos  0.32578130553514806\n",
            "The value of sin and cos at  270\n",
            "value of sin  0.9844698095114734\n",
            "value of cos  0.9843819506325049\n",
            "The value of sin and cos at  300\n",
            "value of sin  -0.02159673771717774\n",
            "value of cos  -0.022096619278683942\n",
            "The value of sin and cos at  330\n",
            "value of sin  -0.9911324657228826\n",
            "value of cos  -0.9911988217552068\n"
          ]
        }
      ]
    }
  ]
}